{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Cookies from 'js-cookie'; // Import js-cookie library\n\nconst API_URL = 'http://localhost:8000/api';\nconst useAuth = () => {\n  _s();\n  const [accessToken, setAccessToken] = useState(null);\n  const [refreshToken, setRefreshToken] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [error, setError] = useState('');\n  const [username, setUsername] = useState(null);\n  useEffect(() => {\n    const storedAccessToken = Cookies.get('access_token');\n    const storedRefreshToken = Cookies.get('refresh_token');\n    const storedIsAuthorized = Cookies.get('isAuthorized'); // Check for isAuthorized cookie\n\n    if (storedAccessToken && storedRefreshToken && storedIsAuthorized === 'true') {\n      setAccessToken(storedAccessToken);\n      setRefreshToken(storedRefreshToken);\n      setIsAuthenticated(true);\n    }\n  }, []);\n  const login = async credentials => {\n    try {\n      const response = await axios.post(`${API_URL}/token/`, credentials);\n      const {\n        access,\n        refresh\n      } = response.data;\n      setAccessToken(access);\n      setRefreshToken(refresh);\n      setUsername(credentials.username); // Check if user exists in response\n      setIsAuthenticated(true);\n      Cookies.set('access_token', access, response.data.expires_in);\n      Cookies.set('refresh_token', refresh, response.data.refresh_expires_in);\n      Cookies.set('username', credentials.username); // Set username\n      Cookies.set('isAuthorized', true); // Set isAuthorized to true on successful login\n    } catch (error) {\n      setIsAuthenticated(false);\n      setUsername(null);\n      if (error.response) {\n        setError(error.response.data.message || 'Invalid username or password');\n      } else {\n        setError('An error occurred during login');\n      }\n    }\n  };\n  const logout = () => {\n    setAccessToken(null);\n    setRefreshToken(null);\n    setIsAuthenticated(false);\n    setUsername(null);\n    setError('');\n    Cookies.remove('access_token');\n    Cookies.remove('refresh_token');\n    Cookies.remove('username');\n    Cookies.remove('isAuthorized'); // Remove isAuthorized cookie on logout\n  };\n  const refreshAccessToken = async () => {\n    try {\n      const response = await axios.post(`${API_URL}/refresh-token/`, {\n        refresh: refreshToken\n      });\n      const {\n        access,\n        refresh\n      } = response.data;\n      setAccessToken(access);\n      setRefreshToken(refresh);\n      setIsAuthenticated(true);\n      Cookies.set('access_token', access, response.data.expires_in);\n      Cookies.set('refresh_token', refresh, response.data.refresh_expires_in);\n      Cookies.set('username', username);\n    } catch (error) {\n      setIsAuthenticated(false);\n      setUsername(null);\n      setError(error.response.data.message || 'Error refreshing token');\n    }\n  };\n  const getUsername = () => {\n    return Cookies.get('username');\n  };\n  const authAxios = axios.create({\n    headers: {\n      Authorization: `Bearer ${accessToken}`\n    }\n  });\n  return {\n    accessToken,\n    refreshToken,\n    isAuthenticated,\n    error,\n    username,\n    getUsername,\n    login,\n    logout,\n    refreshAccessToken,\n    authAxios\n  };\n};\n_s(useAuth, \"yn4yIwDcDRCQslmCn12gcrct5CQ=\");\nexport default useAuth;","map":{"version":3,"names":["useState","useEffect","axios","Cookies","API_URL","useAuth","_s","accessToken","setAccessToken","refreshToken","setRefreshToken","isAuthenticated","setIsAuthenticated","error","setError","username","setUsername","storedAccessToken","get","storedRefreshToken","storedIsAuthorized","login","credentials","response","post","access","refresh","data","set","expires_in","refresh_expires_in","message","logout","remove","refreshAccessToken","getUsername","authAxios","create","headers","Authorization"],"sources":["C:/Users/brg20/Documents/Study/Web/TicketsStore/react_app/src/hooks/use-auth.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie'; // Import js-cookie library\r\n\r\n\r\nconst API_URL = 'http://localhost:8000/api';\r\n\r\nconst useAuth = () => {\r\n  const [accessToken, setAccessToken] = useState(null);\r\n  const [refreshToken, setRefreshToken] = useState(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [username, setUsername] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const storedAccessToken = Cookies.get('access_token');\r\n    const storedRefreshToken = Cookies.get('refresh_token');\r\n    const storedIsAuthorized = Cookies.get('isAuthorized'); // Check for isAuthorized cookie\r\n\r\n    if (storedAccessToken && storedRefreshToken && storedIsAuthorized === 'true') {\r\n      setAccessToken(storedAccessToken);\r\n      setRefreshToken(storedRefreshToken);\r\n      setIsAuthenticated(true);\r\n    }\r\n  }, []);\r\n\r\n  const login = async (credentials) => {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/token/`, credentials);\r\n      const { access, refresh} = response.data;\r\n      setAccessToken(access);\r\n      setRefreshToken(refresh);\r\n      setUsername(credentials.username); // Check if user exists in response\r\n      setIsAuthenticated(true);\r\n      Cookies.set('access_token', access, response.data.expires_in);\r\n      Cookies.set('refresh_token', refresh, response.data.refresh_expires_in);\r\n      Cookies.set('username', credentials.username); // Set username\r\n      Cookies.set('isAuthorized', true); // Set isAuthorized to true on successful login\r\n    } catch (error) {\r\n      setIsAuthenticated(false);\r\n      setUsername(null);\r\n      if (error.response) {\r\n        setError(error.response.data.message || 'Invalid username or password');\r\n      } else {\r\n        setError('An error occurred during login');\r\n      }\r\n    }\r\n\r\n  };\r\n\r\n  const logout = () => {\r\n    setAccessToken(null);\r\n    setRefreshToken(null);\r\n    setIsAuthenticated(false);\r\n    setUsername(null);\r\n    setError('');\r\n    Cookies.remove('access_token');\r\n    Cookies.remove('refresh_token');\r\n    Cookies.remove('username');\r\n    Cookies.remove('isAuthorized'); // Remove isAuthorized cookie on logout\r\n  };\r\n\r\n  const refreshAccessToken = async () => {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/refresh-token/`, { refresh: refreshToken });\r\n      const { access, refresh} = response.data;\r\n      setAccessToken(access);\r\n      setRefreshToken(refresh);\r\n      setIsAuthenticated(true);\r\n\r\n      Cookies.set('access_token', access, response.data.expires_in);\r\n      Cookies.set('refresh_token', refresh, response.data.refresh_expires_in);\r\n      Cookies.set('username', username);\r\n    } catch (error) {\r\n      setIsAuthenticated(false);\r\n      setUsername(null);\r\n      setError(error.response.data.message || 'Error refreshing token');\r\n    }\r\n  };\r\n\r\n  const getUsername = () => {\r\n    return Cookies.get('username');\r\n  };\r\n\r\n  const authAxios = axios.create({\r\n    headers: {\r\n      Authorization: `Bearer ${accessToken}`,\r\n    },\r\n  });\r\n\r\n  return {\r\n    accessToken,\r\n    refreshToken,\r\n    isAuthenticated,\r\n    error,\r\n    username,\r\n    getUsername,\r\n    login,\r\n    logout,\r\n    refreshAccessToken,\r\n    authAxios,\r\n  };\r\n};\r\n\r\nexport default useAuth;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}