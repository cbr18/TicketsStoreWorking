{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brg20\\\\Documents\\\\Study\\\\Web\\\\TicketsStore\\\\react_app\\\\src\\\\pages\\\\HomePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport useAuth from '../hooks/use-auth';\nimport Select from 'react-select';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:8000';\nconst HomePage = () => {\n  _s();\n  const {\n    isAuthenticated,\n    getUsername\n  } = useAuth();\n  const [city, setCity] = useState({});\n  const [cities, setCities] = useState([]);\n  useEffect(() => {\n    const fetchCities = async () => {\n      try {\n        if (cities.length === 0) {\n          const response = await axios.get(`${API_URL}/cities/`);\n          setCities(response.data);\n        }\n      } catch (error) {\n        console.error('Error fetching cities:', error);\n      }\n    };\n    fetchCities();\n  }, [cities.length]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isAuthenticated && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Hello, \", getUsername()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      className: \"basic-single\",\n      classNamePrefix: \"select\",\n      options: cities,\n      defaultValue: cities[0],\n      placeholder: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0433\\u043E\\u0440\\u043E\\u0434\",\n      isSearchable: true,\n      onChange: newValue => {\n        setCity(newValue); // Обновляем состояние выбранного города\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), city.value &&\n    /*#__PURE__*/\n    // Условно выводим навигацию с учетом значения города\n    _jsxDEV(Navigate, {\n      to: `/${city.value}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"3Zc0OvM5t5F8jNA2K3QT2Sqza3w=\", false, function () {\n  return [useAuth];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useEffect","useState","axios","useAuth","Select","Navigate","jsxDEV","_jsxDEV","API_URL","HomePage","_s","isAuthenticated","getUsername","city","setCity","cities","setCities","fetchCities","length","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","classNamePrefix","options","defaultValue","placeholder","isSearchable","onChange","newValue","value","to","_c","$RefreshReg$"],"sources":["C:/Users/brg20/Documents/Study/Web/TicketsStore/react_app/src/pages/HomePage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport useAuth from '../hooks/use-auth';\r\nimport Select from 'react-select';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst API_URL = 'http://localhost:8000';\r\n\r\nconst HomePage = () => {\r\n  const { isAuthenticated, getUsername } = useAuth();  \r\n  const [city, setCity] = useState({});\r\n  const [cities, setCities] = useState([]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n  const fetchCities = async () => {\r\n    try {\r\n      if (cities.length === 0) {\r\n        const response = await axios.get(`${API_URL}/cities/`);\r\n        setCities(response.data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching cities:', error);\r\n    }\r\n  };\r\n\r\n  fetchCities();\r\n}, [cities.length]);\r\n\r\n  return (\r\n    <div>\r\n\r\n      {isAuthenticated && <h1>Hello, {getUsername()}</h1>}\r\n\r\n\r\n        <Select\r\n        className=\"basic-single\"\r\n        classNamePrefix=\"select\"\r\n        options={cities}\r\n        defaultValue={cities[0]}\r\n        placeholder=\"Выберите город\"\r\n        isSearchable\r\n        onChange={(newValue) => {\r\n          setCity(newValue); // Обновляем состояние выбранного города\r\n        }}\r\n      />\r\n\r\n      {city.value && ( // Условно выводим навигацию с учетом значения города\r\n        <Navigate to={`/${city.value}`} />\r\n      \r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,mBAAmB;AACvC,OAAOC,MAAM,MAAM,cAAc;AACjC,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,OAAO,GAAG,uBAAuB;AAEvC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM;IAAEC,eAAe;IAAEC;EAAY,CAAC,GAAGT,OAAO,CAAC,CAAC;EAClD,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAIxCD,SAAS,CAAC,MAAM;IAChB,MAAMiB,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,IAAIF,MAAM,CAACG,MAAM,KAAK,CAAC,EAAE;UACvB,MAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAAE,GAAEZ,OAAQ,UAAS,CAAC;UACtDQ,SAAS,CAACG,QAAQ,CAACE,IAAI,CAAC;QAC1B;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAEDL,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACF,MAAM,CAACG,MAAM,CAAC,CAAC;EAEjB,oBACEX,OAAA;IAAAiB,QAAA,GAEGb,eAAe,iBAAIJ,OAAA;MAAAiB,QAAA,GAAI,SAAO,EAACZ,WAAW,CAAC,CAAC;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAGjDrB,OAAA,CAACH,MAAM;MACPyB,SAAS,EAAC,cAAc;MACxBC,eAAe,EAAC,QAAQ;MACxBC,OAAO,EAAEhB,MAAO;MAChBiB,YAAY,EAAEjB,MAAM,CAAC,CAAC,CAAE;MACxBkB,WAAW,EAAC,iFAAgB;MAC5BC,YAAY;MACZC,QAAQ,EAAGC,QAAQ,IAAK;QACtBtB,OAAO,CAACsB,QAAQ,CAAC,CAAC,CAAC;MACrB;IAAE;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAEDf,IAAI,CAACwB,KAAK;IAAA;IAAM;IACf9B,OAAA,CAACF,QAAQ;MAACiC,EAAE,EAAG,IAAGzB,IAAI,CAACwB,KAAM;IAAE;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAElC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClB,EAAA,CA9CID,QAAQ;EAAA,QAC6BN,OAAO;AAAA;AAAAoC,EAAA,GAD5C9B,QAAQ;AAgDd,eAAeA,QAAQ;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}